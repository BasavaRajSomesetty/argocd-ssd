data:
  context: |
    argocdUrl: "<ArgoCD URL>"
    argocdName: "<ArgoCD name>"
    argoEnvironmentList: "<accountname>|https://<Cluster IP address>"
  service.webhook.rabbitmq: |
    url: http://<RabbitMQ external IP or DNS value>:15672/api/exchanges/%2f/argo.events/publish
    basicAuth:
      username: <SSD RabbitMQ username>
      password: <SSD RabbitMQ password>
  subscriptions: |
    # subscription for on-sync-status-unknown trigger notifications
    - recipients:
      - rabbitmq:rabbitmq
      triggers:
      - on-sync-running
  template.rabbitmq: |
    webhook:
      rabbitmq:
        method: POST
        body: |
          {"properties":{},
          "routing_key":"argo-ssd",
          "payload": "{\"applicationName\":\"{{.app.metadata.name}}\",\"deploymentServer\": \"{{.app.spec.destination.server}}\",\"argocdName\": \"{{.context.argocdName}}\",\"namespace\": \"{{.app.spec.destination.namespace}}\",\"deploymentStartedAt\": \"{{.app.status.operationState.startedAt}}\",\"sourceRepoUrl\": \"{{.app.status.sync.comparedTo.source.repoURL}}\",\"sourcePath\": \"{{.app.status.sync.comparedTo.source.path}}\",\"sourceTargetRevision\": \"{{.app.status.sync.comparedTo.source.targetRevision}}\",\"deployedBy\": \"{{.app.status.operationState.operation.initiatedBy.username}}\",\"environmentList\": \"{{.context.argoEnvironmentList}}\"}",
          "payload_encoding":"string"}
  trigger.on-sync-running: |
    - description: Application is being synced
      send:
      - rabbitmq
      when: app.status.operationState.phase in ['Running']
